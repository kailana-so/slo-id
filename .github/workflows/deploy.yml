# .github/workflows/deploy-slo-id.yml
name: Deploy Slo-id (build in CI)

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: .

    env:
      NODE_ENV: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install deps
        run: yarn install --frozen-lockfile

      - name: Build (CI)
        run: yarn build

      - name: Sanity check build
        run: |
          test -f .next/BUILD_ID
          test -f .next/prerender-manifest.json

      - name: Create build bundle
        run: |
          tar -czf build.tgz \
            .next \
            public \
            package.json \
            yarn.lock \
            ecosystem.config.js \
            tsconfig.json \
            next.config.js

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Upload bundle to droplet
        run: scp -o StrictHostKeyChecking=no build.tgz \
          ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}:/tmp/slo-id-build.tgz

      - name: SSH – deploy artifacts & reload
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} <<'SSH'
          set -euo pipefail

          APP_DIR=/var/www/slo-id
          BUNDLE=/tmp/slo-id-build.tgz

          # Ensure tools exist (no building on server)
          command -v yarn >/dev/null 2>&1 || sudo npm i -g yarn@1.22.22
          command -v pm2  >/dev/null 2>&1 || sudo npm i -g pm2

          mkdir -p "$APP_DIR"
          tar -xzf "$BUNDLE" -C "$APP_DIR"

          cd "$APP_DIR"

          cat > .env.production <<ENV
          NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_MEASUREMENT_ID=${{ secrets.NEXT_PUBLIC_MEASUREMENT_ID }}
          NEXT_PUBLIC_AWS_REGION=${{ secrets.NEXT_PUBLIC_AWS_REGION }}
          NEXT_PUBLIC_IMAGE_BUCKET=${{ secrets.NEXT_PUBLIC_IMAGE_BUCKET }}
          NEXT_PUBLIC_X_SYSTEM_KEY=${{ secrets.NEXT_PUBLIC_X_SYSTEM_KEY }}
          NEXT_PUBLIC_ALA_OCCURANCE_API=${{ secrets.NEXT_PUBLIC_ALA_OCCURANCE_API }}
          AWS_UPLOAD_LAMBDA=${{ secrets.AWS_UPLOAD_LAMBDA }}
          AWS_BUCKET=${{ secrets.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          NOMINATION_API_HOST=${{ secrets.NOMINATION_API_HOST }}
          WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }}
          WEATHER_API_HOST=${{ secrets.WEATHER_API_HOST }}
          EMAIL_SIGNER=${{ secrets.EMAIL_SIGNER }}
          ENV

          yarn install --frozen-lockfile

          test -f .next/BUILD_ID
          test -f .next/prerender-manifest.json

          if pm2 describe slo-id >/dev/null 2>&1; then
            pm2 reload ecosystem.config.js --only slo-id
          else
            pm2 start ecosystem.config.js --only slo-id
          fi

          pm2 save
          echo "✅ Deploy complete (CI-built artifacts)"
          SSH
