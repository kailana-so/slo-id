name: Deploy Slo-id

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: production
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      NEXT_PUBLIC_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_MEASUREMENT_ID }}
      NEXT_PUBLIC_AWS_REGION: ${{ secrets.NEXT_PUBLIC_AWS_REGION }}
      NEXT_PUBLIC_IMAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_IMAGE_BUCKET }}
      NEXT_PUBLIC_X_SYSTEM_KEY: ${{ secrets.NEXT_PUBLIC_X_SYSTEM_KEY }}
      AWS_UPLOAD_LAMBDA: ${{ secrets.AWS_UPLOAD_LAMBDA }}
      AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      NOMINATION_API_HOST: ${{ secrets.NOMINATION_API_HOST }}
      WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
      WEATHER_API_HOST: ${{ secrets.WEATHER_API_HOST }}
      EMAIL_SIGNER: ${{ secrets.EMAIL_SIGNER}}
      NEXT_PUBLIC_ALA_OCCURANCE_API: ${{ secrets.NEXT_PUBLIC_ALA_OCCURANCE_API }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Deploy to Droplet via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} <<EOF
          set -e

          export NVM_DIR="\$HOME/.nvm"
          [ -s "\$NVM_DIR/nvm.sh" ] && . "\$NVM_DIR/nvm.sh"
          nvm install 20
          nvm use 20

          npm install -g yarn

          cd /var/www/slo-id
          git pull origin main

          echo "Writing .env.production"
          cat > .env.production <<ENV
          NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_MEASUREMENT_ID=${{ secrets.NEXT_PUBLIC_MEASUREMENT_ID }}
          NEXT_PUBLIC_AWS_REGION=${{ secrets.NEXT_PUBLIC_AWS_REGION }}
          NEXT_PUBLIC_IMAGE_BUCKET=${{ secrets.NEXT_PUBLIC_IMAGE_BUCKET }}
          NEXT_PUBLIC_X_SYSTEM_KEY=${{ secrets.NEXT_PUBLIC_X_SYSTEM_KEY }}
          AWS_UPLOAD_LAMBDA=${{ secrets.AWS_UPLOAD_LAMBDA }}
          AWS_BUCKET=${{ secrets.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          NOMINATION_API_HOST=${{ secrets.NOMINATION_API_HOST }}
          WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }}
          WEATHER_API_HOST=${{ secrets.WEATHER_API_HOST }}
          EMAIL_SIGNER=${{ secrets.EMAIL_SIGNER}}
          NEXT_PUBLIC_ALA_OCCURANCE_API=${{ secrets.NEXT_PUBLIC_ALA_OCCURANCE_API }}
          ENV

          yarn install --frozen-lockfile
          yarn build

          pm2 start ecosystem.config.js || pm2 restart slo-id
          pm2 save

          echo "âœ… Deployed slo-id"
          EOF
